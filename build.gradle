/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.0/userguide/java_library_plugin.html
 */
 allprojects {
 	group "net.threeple.pg"
 	version "0.6.1"
 }

subprojects{
	// Apply the java-library plugin to add support for Java Library
	apply plugin: 'java-library'
	apply plugin: 'eclipse'

	// In this section you declare where to find the dependencies of your project
	repositories {
	    maven {
            url "http://nexus.local:8081/repository/maven-public/"
        }
	}

	eclipse {
		project {
			name = "$rootProject.name-$project.name"
		}
	}

    javadoc {  
        options{
            encoding "UTF-8"
            charSet 'UTF-8'
            author true
            version true
            title "Photo Gallery - $project.name"
            links "https://docs.oracle.com/javase/8/docs/api/"
        }
    }

    tasks.withType(JavaCompile) {
         options.encoding = "UTF-8"
    }

	dependencies {
	    // This dependency is exported to consumers, that is to say found on their compile classpath.
	    // api 'org.apache.commons:commons-math3:3.6.1'
		
	    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
	    // implementation 'com.google.guava:guava:21.0'
		implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
		implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
		implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

	    // Use JUnit test framework
	    testImplementation 'junit:junit:4.12'

	    
	}
}

project(':api') {
	apply plugin: 'maven-publish'

	publishing {
		repositories {
	        maven {
	            // change to point to your repo, e.g. http://my.org/repo
	            url "http://nexus.local:8081/repository/maven-snapshots/"
	            credentials {
		            username = "${nexusUser}"
		            password = "${nexusPassword}"
		        }
	        }
	    }

	    publications {
	        maven(MavenPublication) {
	            artifactId "$rootProject.name-$project.name"
				version "$project.version-SNAPSHOT"
	            from components.java
	        }
	    }
	}
	dependencies {
		implementation project(':shared')

		testImplementation project(':psd')
		testImplementation project(':mon')
		testImplementation group: 'commons-codec', name: 'commons-codec', version: '1.10'
	}
}

project(':mon') {
	apply plugin: 'application'

	mainClassName = "net.threeple.pg.mon.Bootstrap"

	distributions {
		main {
			baseName = "$rootProject.name-$project.name"
		}
	}

	dependencies {
		implementation project(':shared')
		implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
	}
}

project(':psd') {
	apply plugin: 'application'

	mainClassName = "net.threeple.pg.psd.Bootstrap"

	distributions {
		main {
			baseName = "$rootProject.name-$project.name"
		}
	}

	dependencies {
		implementation project(':shared')
		implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'

		testImplementation group: 'commons-codec', name: 'commons-codec', version: '1.10'
	}
}

project(':shared') {
	apply plugin: 'maven-publish'

	publishing {
		repositories {
	        maven {
	            // change to point to your repo, e.g. http://my.org/repo
	            url "http://nexus.local:8081/repository/maven-snapshots/"
	            credentials {
		            username = "${nexusUser}"
		            password = "${nexusPassword}"
		        }
	        }
	    }

	    publications {
	        maven(MavenPublication) {
	            artifactId "$rootProject.name-$project.name"
				version "$project.version-SNAPSHOT"
	            from components.java
	        }
	    }
	}
}

task writeVersionToFile {
    doLast {
        new File("current_version").write("$version")
        println("$version")
    }
}
